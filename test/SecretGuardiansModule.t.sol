// SPDX-License-Identifier: Unlicensed
pragma solidity 0.8.17;

import "forge-std/Test.sol";
import "src/SecretGuardiansModule.sol";

contract zkConnectDummyModuleTest is Test {
    error AppIdMismatch(bytes16 receivedAppId, bytes16 expectedAppId);
    error NamespaceMismatch(bytes16 receivedNamespace, bytes16 expectedNamespace);
    error VersionMismatch(bytes32 requestVersion, bytes32 responseVersion);
    error SignatureMessageMismatch(bytes requestMessageSignature, bytes responseMessageSignature);

    function setUp() public {
        vm.createSelectFork("https://goerli.blockpi.network/v1/rpc/public");
    }

    function testSimpleAttachment() public {
        address _safe = 0xe23B2067877E013434bE22BE0357B176bcC00174;
        bytes16 _appId = 0x233d8ed9e8c2c89ccc3bccdece915115;
        bytes16 _groupId = 0x3497b46c5dcd30bf8ee001fe3fdd0acd;

        SecretAngelModule angelModule = new SecretAngelModule(_safe, _appId, _groupId);
        vm.startPrank(_safe);
        GnosisSafe safe = GnosisSafe(_safe);

        safe.enableModule(address(angelModule));
        vm.stopPrank();

        bytes memory proof =
            hex"0000000000000000000000000000000000000000000000000000000000000020233d8ed9e8c2c89ccc3bccdece91511500000000000000000000000000000000b8e2054f8a912367e38a22ce773328ff000000000000000000000000000000007369736d6f2d636f6e6e6563742d76310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000001a068796472612d73322e310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001c000000000000000000000000000000000000000000000000000000000000004a0000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010c867f7320246666e5ae0ba6767c0e5f6d2adce42ef74da788e165bbe981cce100000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002c00613f5b6f14c6978957d58355ba30edbce86a8077c302370aa85447630b8641427c8362f805d164eeeba05d742589d12b537fadec915487292445c0772b9c64015f1c9b6f38a085077336aa35391c035b945734351ead469320003b42ceb85a22c0158b7f7cb89390182afb5cd64659ca298cbf8700b9adcc575b28c3b9dd7b20dc1022f47b23a33779b8f9291b8ddef6317e576e473d593f4eaec26fb1e0b7f08a699fa2ecfd03e2553e25ba1b27e384459356a2827e2498c01a75accc2aaab1fa8270c6eb6d7a7732499eb0b56b7f066c63e82e8bb4cc4533f4de67ced99640f940f0b6d93696e15c9c73cebc60b8d16516645cfb11d2f00587cb4b925b6190000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000007f6c5612eb579788478789deccb06cf0eb168e457eea490af754922939ebdb920706798455f90ed993f8dac8075fc1538738a25f0c928da905c0dffd81869fa0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000c867f7320246666e5ae0ba6767c0e5f6d2adce42ef74da788e165bbe981cce1255736de257bc5d01c05a141d8f3a26f8e5c08e3b418bd698ecfcdb233c00cfc000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        

        vm.startPrank(0xA77aFBE129ae74869179df6cE9BA7b8d83Cbd4F1);
        angelModule.helpRecover(address(0x42), proof);
        vm.stopPrank();
    }
}
